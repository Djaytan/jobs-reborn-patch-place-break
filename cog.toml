tag_prefix = "v"
branch_whitelist = [
  "main"
]

# Perform the following steps:
# 1. Create the release branch and switch on it
# 2. Update pom.xml files with the new version being prepared
# 3. Generate the Spigot plugin
# 4. Update back pom.xml files to a DEV version
# 5. Let Cocogitto generate the CHANGELOG file and commit it
# 6. Push the commit and the associated release branch to the remote
pre_bump_hooks = [
  "git branch release/{{version_tag}}",
  "git switch release/{{version_tag}}",
  "mvn versions:set -DnewVersion='{{version}}' --batch-mode --errors",
  "mvn clean package --activate-profiles fast --batch-mode --errors --strict-checksums --update-snapshots --fail-fast",
  "mvn versions:set -DnewVersion='0.0.1-DEV-SNAPSHOT' --batch-mode --errors"
]
post_bump_hooks = [
  "git push --set-upstream origin release/{{version_tag}}"
]

[commit_types]
feat = { changelog_title = "🌟 Features" }
fix = { changelog_title = "🐛 Bug Fixes" }
perf = { changelog_title = "⚡ Performances" }
revert = { changelog_title = "↩️ Revert" }
docs = { changelog_title = "📖 Documentation" }
test = { changelog_title = "✅ Tests" }
build = { changelog_title = "🏗️ Build System" }
ci = { changelog_title = "📦 Continuous Integration" }
refactor = { changelog_title = "🛠️ Refactoring" }
chore = { changelog_title = "🧹 Miscellaneous Chores" }
style = { changelog_title = "🖌️ Style" }

[changelog]
path = ".github/CHANGELOG.md"
template = "remote"
remote = "github.com"
owner = "Djaytan"
repository = "mc-jobs-reborn-patch-place-break"
authors = [
  { signature = "Djaytan", username = "Djaytan" }
]
